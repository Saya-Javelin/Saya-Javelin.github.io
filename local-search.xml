<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>NOIp2017-逛公园</title>
    <link href="undefined2019/11/07/solutions/NOIp2017_Day1T3_Park/"/>
    <url>2019/11/07/solutions/NOIp2017_Day1T3_Park/</url>
    
    <content type="html"><![CDATA[<h3 id="noip-day1-t3-逛公园"><a class="markdownIt-Anchor" href="#noip-day1-t3-逛公园"></a> NOIp Day1 T3 逛公园</h3><p>调了两天，自闭了</p><a id="more"></a><pre class="highlight"><code class="cpp"><span class="hljs-comment">/*/Saya-Javelin/*/</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> iln inline</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> rgt register</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> int long long</span><span class="hljs-keyword">using</span> <span class="hljs-built_in">std</span>::<span class="hljs-built_in">memset</span>;<span class="hljs-keyword">using</span> <span class="hljs-built_in">std</span>::priority_queue;<span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> S=<span class="hljs-number">1000000</span>;<span class="hljs-keyword">char</span> RRR[S];<span class="hljs-keyword">char</span> *SSR, *UR;<span class="hljs-function">iln <span class="hljs-keyword">char</span> <span class="hljs-title">fgc</span> <span class="hljs-params">()</span> </span>{    <span class="hljs-keyword">if</span> (SSR==UR) UR=(SSR=RRR)+fread (RRR, <span class="hljs-number">1</span>, S, <span class="hljs-built_in">stdin</span>);    <span class="hljs-keyword">return</span> SSR==UR ? EOF : *SSR++;}<span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> gc rrr=fgc()</span><span class="hljs-comment">//#define gc rrr=getchar()</span><span class="hljs-function">iln <span class="hljs-keyword">int</span> <span class="hljs-title">read</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;ur)</span> </span>{    <span class="hljs-keyword">int</span> ssr=<span class="hljs-number">1</span>; <span class="hljs-keyword">char</span> rrr; ur=<span class="hljs-number">0</span>;    <span class="hljs-keyword">while</span> (gc, rrr&gt;<span class="hljs-string">'9'</span> || rrr&lt;<span class="hljs-string">'0'</span>)    <span class="hljs-keyword">if</span> (rrr==<span class="hljs-string">'-'</span>) ssr=<span class="hljs-number">-1</span>;    <span class="hljs-keyword">while</span> (rrr&gt;=<span class="hljs-string">'0'</span> &amp;&amp; rrr&lt;=<span class="hljs-string">'9'</span>)    ur=ur*<span class="hljs-number">10</span>+rrr-<span class="hljs-string">'0'</span>, gc;    <span class="hljs-keyword">return</span> ur=ur*ssr;}<span class="hljs-meta">#<span class="hljs-meta-keyword">undef</span> gc</span><span class="hljs-function">iln <span class="hljs-keyword">void</span> <span class="hljs-title">write</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> ur)</span> </span>{    <span class="hljs-keyword">if</span> (ur&lt;<span class="hljs-number">0</span>) <span class="hljs-built_in">putchar</span> (<span class="hljs-string">'-'</span>), ur*=<span class="hljs-number">-1</span>;    <span class="hljs-keyword">if</span> (ur&gt;=<span class="hljs-number">10</span>) write (ur/<span class="hljs-number">10</span>);    <span class="hljs-built_in">putchar</span> (ur%<span class="hljs-number">10</span>+<span class="hljs-string">'0'</span>);}<span class="hljs-function">iln <span class="hljs-keyword">void</span> <span class="hljs-title">wtn</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> ur)</span> </span>{    write (ur), <span class="hljs-built_in">putchar</span> (<span class="hljs-string">'\n'</span>);}<span class="hljs-function">iln <span class="hljs-keyword">void</span> <span class="hljs-title">wts</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> ur)</span> </span>{    write (ur), <span class="hljs-built_in">putchar</span> (<span class="hljs-string">' '</span>);}<span class="hljs-comment">//以上我奇怪的头文件&amp;快读 </span><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> MAX=<span class="hljs-number">100005</span>, INF=<span class="hljs-number">0x7ffffffffff</span>ll;<span class="hljs-keyword">int</span> T;<span class="hljs-keyword">int</span> n, m, K, P;<span class="hljs-keyword">int</span> headt[MAX], kt=<span class="hljs-number">0</span>, headf[MAX], kf=<span class="hljs-number">0</span>;<span class="hljs-keyword">int</span> u, v, w;<span class="hljs-keyword">int</span> dis[MAX], f[<span class="hljs-number">55</span>][MAX];<span class="hljs-keyword">bool</span> insta[<span class="hljs-number">55</span>][MAX];<span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>;<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">edge</span> {</span><span class="hljs-keyword">int</span> t, ne, v;} et[MAX&lt;&lt;<span class="hljs-number">1</span>], ef[MAX&lt;&lt;<span class="hljs-number">1</span>];<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">info</span> {</span><span class="hljs-keyword">int</span> id, dis;iln <span class="hljs-keyword">bool</span> <span class="hljs-keyword">operator</span> &lt; (<span class="hljs-keyword">const</span> info &amp;that) <span class="hljs-keyword">const</span> {<span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>-&gt;dis &gt; that.dis;}};<span class="hljs-function">iln <span class="hljs-keyword">void</span> <span class="hljs-title">add</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j, <span class="hljs-keyword">int</span> van, edge *e, <span class="hljs-keyword">int</span> *head, <span class="hljs-keyword">int</span> &amp;cnt)</span> </span>{<span class="hljs-comment">//传入指针大概方便些? 指针并不大会用... </span>e[++cnt]= (edge) {j, head[i], van};head[i]=cnt;}priority_queue &lt;info&gt; q;<span class="hljs-function">iln <span class="hljs-keyword">void</span> <span class="hljs-title">SPFA</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> start, edge *e, <span class="hljs-keyword">int</span> *head)</span> </span>{<span class="hljs-comment">//你以为是SPFA? 其实是我dio(划)dijkstra哒! </span>dis[start]=<span class="hljs-number">0</span>, q.push((info){start, <span class="hljs-number">0</span>}); <span class="hljs-keyword">while</span> (!q.empty()) {info now=q.top(); q.pop();<span class="hljs-keyword">if</span> (now.dis!=dis[now.id]) <span class="hljs-keyword">continue</span>;<span class="hljs-keyword">for</span> (rgt <span class="hljs-keyword">int</span> i=head[now.id], to=e[i].t; i; i=e[i].ne, to=e[i].t)  <span class="hljs-keyword">if</span> (dis[to]&gt;dis[now.id]+e[i].v) {dis[to]=dis[now.id]+e[i].v;q.push ((info) {to, dis[to]});}}}<span class="hljs-function">iln <span class="hljs-keyword">int</span> <span class="hljs-title">dfs</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> now, <span class="hljs-keyword">int</span> nowk, edge *e, <span class="hljs-keyword">int</span> *head)</span> </span>{<span class="hljs-comment">//now表示当前位置</span><span class="hljs-comment">//nowk表示当前路径还能再比最短路径长多少</span><span class="hljs-comment">//(也就是接下去还能再把当前路径长度增加多少, 且仍符合条件) </span><span class="hljs-comment">//e和head决定跑反图还是原图</span><span class="hljs-comment">//似乎跑反图快些? 但跑的快不一定赢(划) 跑原图也能跑过去</span><span class="hljs-keyword">if</span> (nowk&gt;K) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-comment">//此时的k不符合条件, 直接返回掉 </span><span class="hljs-comment">//(nowk不会小于0, 要不然最短路就是萎的;)</span><span class="hljs-comment">//(nowk如果此时大于K了, 接下去必然仍大于K, 要不然最短路就又是萎的)</span><span class="hljs-keyword">if</span> (insta[nowk][now]) <span class="hljs-keyword">return</span> insta[nowk][now]=<span class="hljs-number">0</span>, <span class="hljs-number">-1</span>;<span class="hljs-comment">//相同的now和nowk又跑了一次, 说明有0环 </span><span class="hljs-keyword">if</span> (f[nowk][now]!=<span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> f[nowk][now];<span class="hljs-comment">//记忆化, 这个点跑过且长度相同的就直接return </span>insta[nowk][now]=<span class="hljs-number">1</span>;rgt <span class="hljs-keyword">int</span> tmp=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span> (rgt <span class="hljs-keyword">int</span> i=head[now]; i; i=e[i].ne) {rgt <span class="hljs-keyword">int</span> to=e[i].t, totmp, nowdis=dis[to]+e[i].v-dis[now];<span class="hljs-comment">//to是这条边连向的点, totmp表示连出去的点的方案数(那个点的答案)</span><span class="hljs-comment">//nowdis表示走这条边和最短路长度相差多少 </span><span class="hljs-keyword">if</span> (nowdis&gt;=<span class="hljs-number">0</span> &amp;&amp; nowdis&lt;=nowk) {<span class="hljs-comment">//如果走这条边合法 </span>totmp= dfs (to, nowk-nowdis, e, head);<span class="hljs-comment">//获取答案 </span><span class="hljs-keyword">if</span> (totmp==<span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> insta[nowk][now]=<span class="hljs-number">0</span>, f[nowk][now]=<span class="hljs-number">-1</span>;<span class="hljs-comment">//有0环, 退出 </span>(tmp+=totmp)%=P;<span class="hljs-comment">//累加 </span>}}insta[nowk][now]=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span> (now==n &amp;&amp; !nowk) tmp=<span class="hljs-number">1</span>;<span class="hljs-comment">//如果nowk为0且此时在终点, 说明此时跑的是最短路径, 这个答案是最开始的答案, 所以把它初始化为 1 </span><span class="hljs-keyword">return</span> f[nowk][now]=tmp;<span class="hljs-comment">//记忆化 </span>}<span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>{read (T);START: <span class="hljs-keyword">while</span> (T--) {kt=kf=ans=<span class="hljs-number">0</span>;<span class="hljs-comment">//多组数据不清空, 满屏爆蛋见祖宗 </span>read (n), read (m), read (K), read (P);<span class="hljs-keyword">for</span> (rgt <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>; i&lt;=n; ++i) {<span class="hljs-comment">//一坨memset有点长, 手写短些 (但慢了好多?  </span>headt[i]=headf[i]=<span class="hljs-number">0</span>, dis[i]=INF;<span class="hljs-keyword">for</span> (rgt <span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>; j&lt;=K; ++j) f[j][i]=<span class="hljs-number">-1</span>;}<span class="hljs-keyword">for</span> (rgt <span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=m; ++i) {read (u), read (v), read (w);add (u, v, w, et, headt, kt), add (v, u, w, ef, headf, kf);<span class="hljs-comment">//原图和反图 </span>}SPFA (n, ef, headf);<span class="hljs-comment">//因为我要求的是每个点到终点的距离, 又因为是有向图, 所以得跑反图, 这个不理解可以手膜</span><span class="hljs-comment">//(我一开始连这个都没懂...这人真的菜) </span><span class="hljs-keyword">for</span> (rgt <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>; i&lt;=K; ++i) {<span class="hljs-comment">//从0开始, 也就是从最短路开始初始化 </span>rgt <span class="hljs-keyword">int</span> tmp=dfs (<span class="hljs-number">1</span>, i, et, headt);<span class="hljs-keyword">if</span> (tmp==<span class="hljs-number">-1</span>) { <span class="hljs-built_in">puts</span> (<span class="hljs-string">"-1"</span>); <span class="hljs-keyword">goto</span> START; }<span class="hljs-comment">//有0环，终止交易 (?) </span><span class="hljs-keyword">else</span> (ans+=tmp)%=P;<span class="hljs-comment">//所有方案和 </span>}wtn (ans);}<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}<span class="hljs-comment">//询问一个图中与最短路长度相差不超过K的路径条数</span><span class="hljs-comment">//显然有0环就有无数条</span><span class="hljs-comment">//记搜就行了</span> <span class="hljs-comment">//为啥这么详细 ?因为我菜</span><span class="hljs-comment">//写了两天, 或者说对着题解抄了两天 </span><span class="hljs-comment">//凎, csp岂不是要挂 </span></code></pre>]]></content>
    
    
    <categories>
      
      <category>OI复赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>题解</tag>
      
      <tag>NOIp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初赛错题</title>
    <link href="undefined2019/10/07/preliminaries-chu-sai/"/>
    <url>2019/10/07/preliminaries-chu-sai/</url>
    
    <content type="html"><![CDATA[<p>一小部分错掉的初赛题。</p><a id="more"></a><hr><h4 id="t1"><a class="markdownIt-Anchor" href="#t1"></a> T1</h4><p>由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span></span></span></span>个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault">a</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn></mrow><annotation encoding="application/x-tex">5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">5</span></span></span></span>个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">b</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">2</span></span></span></span>个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault">c</span></span></span></span>构成的所有字符串中,包含子串&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">abc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span></span></span></span>&quot;的共有几个？</p><p>去掉<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">abc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span></span></span></span>三个字母各一个后，分别还有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">2</span></span></span></span>个、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">4</span></span></span></span>个和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>个。再把&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">abc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span></span></span></span>“看成一个元素，共<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mo stretchy="false">(</mo><mn>2</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><mrow><mn>2</mn><mo stretchy="false">!</mo><mo>×</mo><mn>4</mn><mo stretchy="false">!</mo><mo>×</mo><mn>1</mn><mo stretchy="false">!</mo><mo>×</mo><mn>1</mn><mo stretchy="false">!</mo></mrow></mfrac></mstyle><mo>=</mo><mn>840</mn></mrow><annotation encoding="application/x-tex">\dfrac{(2+4+1+1)!}{2!\times 4!\times 1!\times 1!}=840</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-.7693300000000001em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">2</span><span class="mclose">!</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">4</span><span class="mclose">!</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">1</span><span class="mclose">!</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">1</span><span class="mclose">!</span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">4</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">1</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.7693300000000001em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">8</span><span class="mord">4</span><span class="mord">0</span></span></span></span>种排列。但会因子串重复了两个而导致多算，比如”<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="green"><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow></mstyle><mtext> </mtext><mi>b</mi><mi>b</mi><mtext> </mtext><mstyle mathcolor="red"><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow></mstyle><mtext> </mtext><mi>a</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">{\color{green}{abc}}\ bb\ {\color{red}{abc}}\ ab</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord"><span class="mord" style="color:green"><span class="mord mathdefault" style="color:green">a</span><span class="mord mathdefault" style="color:green">b</span><span class="mord mathdefault" style="color:green">c</span></span></span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord mathdefault">b</span><span class="mspace"> </span><span class="mord"><span class="mord" style="color:red"><span class="mord mathdefault" style="color:red">a</span><span class="mord mathdefault" style="color:red">b</span><span class="mord mathdefault" style="color:red">c</span></span></span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span></span></span></span>“和”<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="red"><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow></mstyle><mtext> </mtext><mi>b</mi><mi>b</mi><mtext> </mtext><mstyle mathcolor="green"><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow></mstyle><mtext> </mtext><mi>a</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">{\color{red}{abc}}\ bb\ {\color{green}{abc}}\ ab</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord"><span class="mord" style="color:red"><span class="mord mathdefault" style="color:red">a</span><span class="mord mathdefault" style="color:red">b</span><span class="mord mathdefault" style="color:red">c</span></span></span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord mathdefault">b</span><span class="mspace"> </span><span class="mord"><span class="mord" style="color:green"><span class="mord mathdefault" style="color:green">a</span><span class="mord mathdefault" style="color:green">b</span><span class="mord mathdefault" style="color:green">c</span></span></span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span></span></span></span>&quot;(红色是我们自己用取出的造的子串，绿色是剩下字母的全排列中附带的子串)，所以含两个该子串的字符串被多算了一遍，需要减去。同理我们再去掉<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">abc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span></span></span></span>各一个，分别还有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>个、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span></span></span></span>个、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">0</span></span></span></span>个，以及两个&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">abc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span></span></span></span>&quot;所以含两个子串的排列数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><mrow><mn>1</mn><mo stretchy="false">!</mo><mo>×</mo><mn>3</mn><mo stretchy="false">!</mo><mo>×</mo><mn>2</mn><mo stretchy="false">!</mo></mrow></mfrac></mstyle><mo>×</mo><mo>=</mo><mn>60</mn></mrow><annotation encoding="application/x-tex">\dfrac{(1+3+2)!}{1!\times 3!\times 2!}\times =60</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-.7693300000000001em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span><span class="mclose">!</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">3</span><span class="mclose">!</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">2</span><span class="mclose">!</span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">2</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.7693300000000001em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">×</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">6</span><span class="mord">0</span></span></span></span>种。所以最终答案就是两数相减<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>840</mn><mo>−</mo><mn>60</mn><mo>=</mo><mn>720</mn></mrow><annotation encoding="application/x-tex">840-60=720</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.72777em;vertical-align:-.08333em"></span><span class="mord">8</span><span class="mord">4</span><span class="mord">0</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">7</span><span class="mord">2</span><span class="mord">0</span></span></span></span>种。</p><h4 id="t2"><a class="markdownIt-Anchor" href="#t2"></a> T2</h4><p>在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2015</mn></mrow><annotation encoding="application/x-tex">2015</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">1</span><span class="mord">5</span></span></span></span> 之间（包括 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2015</mn></mrow><annotation encoding="application/x-tex">2015</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">1</span><span class="mord">5</span></span></span></span> 在内）不能被 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">4</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn></mrow><annotation encoding="application/x-tex">5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">5</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>6</mn></mrow><annotation encoding="application/x-tex">6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">6</span></span></span></span> 三个数任意一个数整除的数有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">_</mi><mi mathvariant="normal">_</mi><mi mathvariant="normal">_</mi><mi mathvariant="normal">_</mi></mrow><annotation encoding="application/x-tex">\_\_\_\_</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:-.31em"></span><span class="mord" style="margin-right:.02778em">_</span><span class="mord" style="margin-right:.02778em">_</span><span class="mord" style="margin-right:.02778em">_</span><span class="mord" style="margin-right:.02778em">_</span></span></span></span>个。</p><p>容斥搞搞就好了，别像我一样<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>h</mi><mi>a</mi><mi>b</mi><mi>b</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">shabby</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:.03588em">y</span></span></span></span>地把被<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">4</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>6</mn></mrow><annotation encoding="application/x-tex">6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">6</span></span></span></span>整除的数用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>24</mn></mrow><annotation encoding="application/x-tex">24</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">2</span><span class="mord">4</span></span></span></span>去算，整除请用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>c</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">lcm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.01968em">l</span><span class="mord mathdefault">c</span><span class="mord mathdefault">m</span></span></span></span>。</p><h4 id="t3"><a class="markdownIt-Anchor" href="#t3"></a> T3</h4><p>本题中，我们约定布尔表达式只能包含 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault">p</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">q</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span> 三个布尔变量，以及“与”（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">∧</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.55556em;vertical-align:0"></span><span class="mord">∧</span></span></span></span>）、“或”（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">∨</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.55556em;vertical-align:0"></span><span class="mord">∨</span></span></span></span>）、“非”（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">¬</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord">¬</span></span></span></span>）三种布尔运算。如果无论 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault">p</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">q</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span> 如何取值，两个布尔表达式的值总是相同，则称它们等价。例如，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>∨</mo><mi>q</mi><mo stretchy="false">)</mo><mo>∨</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">(p∨q)∨r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-.25em"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-.25em"></span><span class="mord mathdefault" style="margin-right:.03588em">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>∨</mo><mo stretchy="false">(</mo><mi>q</mi><mo>∨</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p∨(q∨r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.75em;vertical-align:-.19444em"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-.25em"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:.03588em">q</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-.25em"></span><span class="mord mathdefault" style="margin-right:.02778em">r</span><span class="mclose">)</span></span></span></span>等价，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>∨</mo><mi mathvariant="normal">¬</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">p∨¬p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.75em;vertical-align:-.19444em"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord">¬</span><span class="mord mathdefault">p</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>∨</mo><mi mathvariant="normal">¬</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">q∨¬q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.75em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">q</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord">¬</span><span class="mord mathdefault" style="margin-right:.03588em">q</span></span></span></span> 也等价；而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>∨</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">p∨q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.75em;vertical-align:-.19444em"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">q</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>∧</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">p∧q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.75em;vertical-align:-.19444em"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">q</span></span></span></span> 不等价。那么，两两不等价的布尔表达式最多有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">_</mi><mi mathvariant="normal">_</mi><mi mathvariant="normal">_</mi><mi mathvariant="normal">_</mi></mrow><annotation encoding="application/x-tex">\_\_\_\_</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:-.31em"></span><span class="mord" style="margin-right:.02778em">_</span><span class="mord" style="margin-right:.02778em">_</span><span class="mord" style="margin-right:.02778em">_</span><span class="mord" style="margin-right:.02778em">_</span></span></span></span>个。</p><p>题意：请问，由三个不同布尔变量和“与”“或”“非”三种布尔运算组成的布尔表达式中，两两之间值可能不相同的最多几个？</p><p>再简化：请问由三个布尔变量与这三个运算符组成的式子的值各有几个？</p><p>最后：由于三个变量只可能有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">2^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8141079999999999em;vertical-align:0"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>也就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8</mn></mrow><annotation encoding="application/x-tex">8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">8</span></span></span></span>种可能的取值。每种取值与另一变量的取值两两搭配，共<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><msup><mn>2</mn><mn>3</mn></msup></msup><mo>=</mo><msup><mn>2</mn><mn>8</mn></msup><mo>=</mo><mn>256</mn></mrow><annotation encoding="application/x-tex">2^{2^3}=2^8=256</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.9869199999999999em;vertical-align:0"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.9869199999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8913142857142857em"><span style="top:-2.931em;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.8141079999999999em;vertical-align:0"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span></span></span></span>种情况。</p>]]></content>
    
    
    <categories>
      
      <category>OI初赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>初赛</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>模板解析</title>
    <link href="undefined2019/10/02/templates/"/>
    <url>2019/10/02/templates/</url>
    
    <content type="html"><![CDATA[<h1 id="天坑注意"><a class="markdownIt-Anchor" href="#天坑注意"></a> 天坑注意</h1><h5 id="想说的"><a class="markdownIt-Anchor" href="#想说的"></a> 想说的</h5><p>开个文章写写学过的模板。若有不严谨之处烦劳指出。<s>毕竟咱只是个不学无术还超爱颓的萌新…</s></p><a id="more"></a><h3 id="1-快速排序"><a class="markdownIt-Anchor" href="#1-快速排序"></a> 1. 快速排序</h3><p>​ 在最劣<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-.25em"></span><span class="mord mathdefault" style="margin-right:.02778em">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，平均<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-.25em"></span><span class="mord mathdefault" style="margin-right:.02778em">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mop">lo<span style="margin-right:.01389em">g</span></span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>的时间复杂度与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-.25em"></span><span class="mord mathdefault" style="margin-right:.02778em">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mop">lo<span style="margin-right:.01389em">g</span></span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>的空间复杂度下对数列进行排序。</p><p>​ 在一串数列中任意选取一个__基准数__，每次扫描将数列中大于基准数的元素置于基准数右侧，小于基准数的置于基准数左侧。然后对基准数两侧区间进行上述相同操作。思想基于分治，考察的是对数组与分治的理解。如图-1.1。</p><p><img src="/img/posts/2/1.gif" alt></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathsize="0.9em"><mtext>图-1.1</mtext></mstyle></mrow><annotation encoding="application/x-tex">\small{\text{图-1.1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.614997em;vertical-align:0"></span><span class="mord sizing reset-size6 size5"><span class="mord text"><span class="mord cjk_fallback">图</span><span class="mord">-1.1</span></span></span></span></span></span></span></p><p>​ 可以看出时间复杂度与所选基准数有关。如果每次基准数都选择最左侧的元素，那么，只要整个数列是单调的，就会导致每次扫描都会把剩下的元素全部放在这个基准数的一侧，导致时间复杂度退化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-.25em"></span><span class="mord mathdefault" style="margin-right:.02778em">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。如图-1.2。</p><p><img src="/img/posts/2/2.gif" alt></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathsize="0.9em"><mtext>图-1.2</mtext></mstyle></mrow><annotation encoding="application/x-tex">\small{\text{图-1.2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.614997em;vertical-align:0"></span><span class="mord sizing reset-size6 size5"><span class="mord text"><span class="mord cjk_fallback">图</span><span class="mord">-1.2</span></span></span></span></span></span></span></p><p>​ 代码实现有很多种，有从左侧每次扫描到一个元素就和另一侧较大的数交换的，也有两边同时向中间扫的。至于初赛？emmm…</p><p><s>远古</s>早期个人代码:</p><pre class="highlight"><code class="cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-keyword">int</span> a[<span class="hljs-number">1000001</span>];<span class="hljs-keyword">int</span> n;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">qs</span> <span class="hljs-params">(<span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r)</span> </span>{<span class="hljs-keyword">int</span> i, j, mid;i=l, j=r;mid=a[(l+r)&gt;&gt;<span class="hljs-number">1</span>];<span class="hljs-keyword">do</span> {<span class="hljs-keyword">while</span> (a[i]&lt;mid) i++;<span class="hljs-keyword">while</span> (a[j]&gt;mid) j--;<span class="hljs-keyword">if</span> (i&lt;=j) {swap (a[i], a[j]);i++, j--;}} <span class="hljs-keyword">while</span> (i&lt;=j);<span class="hljs-keyword">if</span> (l&lt;j) qs (l, j);<span class="hljs-keyword">if</span> (i&lt;r) qs (i, r);}<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>{<span class="hljs-built_in">scanf</span> (<span class="hljs-string">"%d"</span>, &amp;n);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n; ++i) <span class="hljs-built_in">scanf</span> (<span class="hljs-string">"%d"</span>, &amp;a[i]);qs (<span class="hljs-number">1</span>, n);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n; ++i) <span class="hljs-built_in">printf</span> (<span class="hljs-string">"%d "</span>, a[i]);<span class="hljs-built_in">puts</span> (<span class="hljs-string">""</span>);<span class="hljs-keyword">return</span> <span class="hljs-number">0</span> ;}</code></pre>]]></content>
    
    
    <categories>
      
      <category>OI复赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>模板</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一坨计划</title>
    <link href="undefined2019/09/02/lists/"/>
    <url>2019/09/02/lists/</url>
    
    <content type="html"><![CDATA[<p>一大堆计划，真的要死人的说…</p><a id="more"></a><h4 id="文化"><a class="markdownIt-Anchor" href="#文化"></a> 文化</h4><h4 id="oi"><a class="markdownIt-Anchor" href="#oi"></a> OI</h4>]]></content>
    
    
    
    <tags>
      
      <tag>计划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="undefined2019/08/23/test/"/>
    <url>2019/08/23/test/</url>
    
    <content type="html"><![CDATA[<p>啦啦啦啦啦啦啦啦啦啦</p><a id="more"></a><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8141079999999999em;vertical-align:0"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><pre class="highlight"><code class="cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span> </span>{    <span class="hljs-keyword">int</span> a, b;    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">"%d%d"</span>, &amp;a, &amp;b);    <span class="hljs-built_in">printf</span> (<span class="hljs-string">"%d\n"</span>, a+b);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><h2 id="big"><a class="markdownIt-Anchor" href="#big"></a> big</h2><p><em>sb</em></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∵</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>12</mn><mi>x</mi><mo>−</mo><mn>3</mn><mo stretchy="false">)</mo><mi>x</mi></mrow><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>3</mn><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>A</mi><mi>x</mi></mrow><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>3</mn><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>B</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>+</mo><mi>x</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>C</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mi>x</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>D</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mn>3</mn><mi>x</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∴</mo><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∴</mo><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><mrow><mo fence="true">(</mo><mi>B</mi><mo>−</mo><mi>C</mi><mo>−</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mi>D</mi><mo fence="true">)</mo></mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∴</mo><mi>D</mi><mo>=</mo><mn>3</mn><mo>×</mo><mo stretchy="false">(</mo><mi>B</mi><mo>−</mo><mi>C</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>153</mn><mn>32</mn></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}{\because \frac{(12 x-3) x}{(1-3 x)^{2}(1+x)(1-x)}=\frac{A x}{(1-3 x)^{2}}+\frac{B x}{1+x}+\frac{C x}{1-x}+\frac{D x}{1-3 x}} \\ {\therefore \lim _{x \rightarrow \infty}(x f(x))=0} \\ {\therefore \lim _{x \rightarrow \infty}\left(B-C-\frac{1}{3} D\right)=0} \\ {\therefore D=3 \times(B-C)=-\frac{153}{32}}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.1451080000000005em;vertical-align:-2.3225540000000002em"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8225540000000002em"><span style="top:-4.822554em"><span class="pstrut" style="height:3.01em"></span><span class="mord"><span class="mord"><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">3</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.7463142857142857em"><span style="top:-2.786em;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.485em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight">3</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.52em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.872331em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">3</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.7463142857142857em"><span style="top:-2.786em;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.52em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.872331em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:.05017em">B</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.403331em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.872331em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:.07153em">C</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.403331em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.872331em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">3</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:.02778em">D</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.403331em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-3.4625539999999995em"><span class="pstrut" style="height:3.01em"></span><span class="mord"><span class="mord"><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.151392em"><span style="top:-2.5500000000000003em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:.10764em">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mord">0</span></span></span></span><span style="top:-2.2525539999999995em"><span class="pstrut" style="height:3.01em"></span><span class="mord"><span class="mord"><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.151392em"><span style="top:-2.5500000000000003em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="minner"><span class="mopen delimcenter" style="top:0"><span class="delimsizing size1">(</span></span><span class="mord mathdefault" style="margin-right:.05017em">B</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord mathdefault" style="margin-right:.07153em">C</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mclose delimcenter" style="top:0"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mord">0</span></span></span></span><span style="top:-1.0474459999999997em"><span class="pstrut" style="height:3.01em"></span><span class="mord"><span class="mord"><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:.05017em">B</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord mathdefault" style="margin-right:.07153em">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3225540000000002em"><span></span></span></span></span></span><span class="arraycolsep" style="width:.5em"></span></span></span></span></span></span></span></p>]]></content>
    
    
    
    <tags>
      
      <tag>文章测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>